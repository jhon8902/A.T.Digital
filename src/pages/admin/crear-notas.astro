---
// src/pages/admin/crear-nota.astro
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>Crear nueva nota</title>
  </head>
  <body>
    <h1>Formulario: Crear nueva nota</h1>

    <form id="form-nota">
      <input type="text" name="titulo" placeholder="TÃ­tulo" required />
      <input type="text" name="subtitulo" placeholder="SubtÃ­tulo" />
      <input type="text" name="descripcion" placeholder="DescripciÃ³n corta" />
      <input
        type="text"
        name="slug"
        placeholder="Slug (ej: volvo-ex90)"
        required
      />
      <input type="text" name="imagen_url" placeholder="URL de imagen" />

      <select id="categoria" name="categoria_id"></select>

      <textarea name="contenido" placeholder="Contenido de la nota" required
      ></textarea>
      <button type="submit">Guardar nota</button>
    </form>

    <script>
      // ðŸ‘‰ Cargar categorÃ­as en el <select>
      async function cargarCategorias() {
        const response = await fetch("/api/categorias");
        const categorias = await response.json();

        const select = document.getElementById("categoria");
        if (select) {
          categorias.forEach((cat) => {
            const option = document.createElement("option");
            option.value = cat.id;
            option.textContent = cat.nombre;
            select.appendChild(option);
          });
        }
      }

      cargarCategorias();

      // ðŸ‘‰ Enviar formulario
      document
        .getElementById("form-nota")
        ?.addEventListener("submit", async (e) => {
          e.preventDefault();

          const form = e.target;
          if (!(form instanceof HTMLFormElement)) return; // âœ… chequeo seguro

          const data = Object.fromEntries(new FormData(form));

          const response = await fetch("/api/nota-nueva", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          });
          const result = await response.json();

          if (response.ok) {
            alert("Nota creada con ID: " + result.id);
            form.reset();
          } else {
            alert("Error al crear la nota: " + result.error);
          }
        });
    </script>
    <!-- TinyMCE CDN -->
    <script
      src="https://cdn.tiny.cloud/1/no-api-key/tinymce/6/tinymce.min.js"
      referrerpolicy="origin"></script>

    <script>
      // @ts-ignore tinymce.init({
      // ...configuraciÃ³n...

      tinymce.init({
        selector: 'textarea[name="contenido"]',
        height: 400,
        plugins: "image link lists",
        toolbar:
          "undo redo | styles | bold italic | alignleft aligncenter alignright | bullist numlist | image link",
        menubar: false,
      });
    </script>
  </body>
</html>

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>Crear nueva nota</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        background: #f5f5f5;
      }
      form {
        background: #fff;

        padding: 2.6rem;
        border-radius: 10px;
        max-width: 800px;
        margin: 2rem auto;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      }

      h1 {
        font-size: 2.6rem;
      }

      input,
      select,
      textarea {
        display: block;
        width: 100%;
        margin-bottom: 1rem;
        padding: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 1.6rem;
      }
      button {
        background: #007bff;
        color: #fff;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1.2rem;
      }
      button:hover {
        background: #0056b3;
      }
    </style>
  </head>
</html>
